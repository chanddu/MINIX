
#ifdef GET_DIAG_ARRAYS
static const short DiagSubGroup0[] = { 85, -1 };
static const short DiagArray1[] = { diag::warn_pragma_message, -1 };
static const short DiagArray2[] = { diag::pp_hash_warning, -1 };
static const short DiagArray3[] = { diag::err_cfstring_literal_not_string_constant, diag::warn_cfstring_truncated, -1 };
static const short DiagArray4[] = { diag::warn_nsobject_attribute, -1 };
static const short DiagArray7[] = { diag::ext_typecheck_addrof_class_temporary, -1 };
static const short DiagSubGroup9[] = { 143, 173, -1 };
static const short DiagArray10[] = { diag::ext_nested_name_member_ref_lookup_ambiguous, -1 };
static const short DiagArray11[] = { diag::warn_incompatible_analyzer_plugin_api, -1 };
static const short DiagArray12[] = { diag::err_arc_indirect_no_ownership, -1 };
static const short DiagSubGroup12[] = { 13, 17, 16, 14, -1 };
static const short DiagArray13[] = { diag::warn_arc_non_pod_class_with_object_member, diag::warn_arc_trivial_member_function_with_object_member, diag::warn_err_new_delete_object_array, -1 };
static const short DiagArray14[] = { diag::warn_arc_object_memaccess, -1 };
static const short DiagArray15[] = { diag::warn_arc_perform_selector_leaks, -1 };
static const short DiagArray16[] = { diag::warn_arc_retain_cycle, -1 };
static const short DiagArray17[] = { diag::warn_arc_retained_assign, diag::warn_arc_retained_property_assign, -1 };
static const short DiagArray18[] = { diag::warn_array_index_exceeds_bounds, diag::warn_array_index_precedes_bounds, diag::warn_static_array_too_small, diag::warn_typecheck_zero_static_array_size, -1 };
static const short DiagArray19[] = { diag::warn_ptr_arith_exceeds_bounds, diag::warn_ptr_arith_precedes_bounds, -1 };
static const short DiagSubGroup20[] = { 105, 61, -1 };
static const short DiagArray21[] = { diag::warn_atomic_property_rule, -1 };
static const short DiagArray22[] = { diag::warn_unknown_attribute_ignored, -1 };
static const short DiagArray23[] = { diag::warn_auto_module_import, -1 };
static const short DiagArray24[] = { diag::ext_auto_storage_class, -1 };
static const short DiagArray26[] = { diag::backslash_newline_space, -1 };
static const short DiagArray28[] = { diag::ext_rvalue_to_reference_access_ctor, diag::ext_rvalue_to_reference_temp_copy_no_viable, -1 };
static const short DiagSubGroup28[] = { 41, -1 };
static const short DiagArray29[] = { diag::warn_bitwise_and_in_bitwise_or, -1 };
static const short DiagArray30[] = { diag::warn_impcast_bool_to_null_pointer, diag::warn_impcast_function_to_bool, -1 };
static const short DiagArray31[] = { diag::pp_redef_builtin_macro, -1 };
static const short DiagArray32[] = { diag::warn_implicit_decl_requires_setjmp, diag::warn_implicit_decl_requires_stdio, diag::warn_implicit_decl_requires_ucontext, -1 };
static const short DiagArray33[] = { diag::ext_empty_struct_union, -1 };
static const short DiagSubGroup34[] = { 37, -1 };
static const short DiagSubGroup35[] = { 38, -1 };
static const short DiagSubGroup36[] = { 39, -1 };
static const short DiagArray37[] = { diag::warn_auto_storage_class, diag::warn_cxx11_keyword, diag::warn_explicit_instantiation_inline_0x, diag::warn_explicit_instantiation_must_be_global_0x, diag::warn_explicit_instantiation_out_of_scope_0x, diag::warn_explicit_instantiation_unqualified_wrong_namespace_0x, -1 };
static const short DiagSubGroup37[] = { 39, -1 };
static const short DiagArray38[] = { diag::ext_alias_declaration, diag::ext_array_size_conversion, diag::ext_auto_type_specifier, diag::ext_explicit_conversion_functions, diag::ext_explicit_instantiation_after_specialization, diag::ext_extern_template, diag::ext_for_range, diag::ext_generalized_initializer_lists, diag::ext_inline_namespace, diag::ext_nonclass_type_friend, diag::ext_nonstatic_member_init, diag::ext_override_control_keyword, diag::ext_ref_qualifier, diag::ext_rvalue_reference, diag::ext_template_outside_of_template, diag::ext_template_parameter_default_in_function_template, diag::ext_template_spec_decl_out_of_scope, diag::ext_typename_outside_of_template, diag::ext_unelaborated_friend_type, diag::ext_variadic_templates, diag::warn_defaulted_function_accepted_as_extension, diag::warn_deleted_function_accepted_as_extension, -1 };
static const short DiagArray39[] = { diag::warn_init_list_constant_narrowing, diag::warn_init_list_variable_narrowing, -1 };
static const short DiagArray40[] = { diag::warn_cxx98_compat_alias_declaration, diag::warn_cxx98_compat_alignas, diag::warn_cxx98_compat_alignof, diag::warn_cxx98_compat_attribute, diag::warn_cxx98_compat_auto_type_specifier, diag::warn_cxx98_compat_constexpr, diag::warn_cxx98_compat_decltype, diag::warn_cxx98_compat_defaulted_function, diag::warn_cxx98_compat_delegating_ctor, diag::warn_cxx98_compat_deleted_function, diag::warn_cxx98_compat_empty_scalar_initializer, diag::warn_cxx98_compat_enum_fixed_underlying_type, diag::warn_cxx98_compat_enum_friend, diag::warn_cxx98_compat_enum_nested_name_spec, diag::warn_cxx98_compat_explicit_conversion_functions, diag::warn_cxx98_compat_for_range, diag::warn_cxx98_compat_friend_is_member, diag::warn_cxx98_compat_friend_redefinition, diag::warn_cxx98_compat_generalized_initializer_lists, diag::warn_cxx98_compat_goto_into_protected_scope, diag::warn_cxx98_compat_indirect_goto_in_protected_scope, diag::warn_cxx98_compat_inline_namespace, diag::warn_cxx98_compat_lambda, diag::warn_cxx98_compat_less_colon_colon, diag::warn_cxx98_compat_literal_operator, diag::warn_cxx98_compat_noexcept_decl, diag::warn_cxx98_compat_noexcept_expr, diag::warn_cxx98_compat_nonclass_type_friend, diag::warn_cxx98_compat_nonstatic_member_init, diag::warn_cxx98_compat_nontrivial_union_or_anon_struct_member, diag::warn_cxx98_compat_nullptr, diag::warn_cxx98_compat_override_control_keyword, diag::warn_cxx98_compat_pass_non_pod_arg_to_vararg, diag::warn_cxx98_compat_raw_string_literal, diag::warn_cxx98_compat_ref_qualifier, diag::warn_cxx98_compat_rvalue_reference, diag::warn_cxx98_compat_scoped_enum, diag::warn_cxx98_compat_sfinae_access_control, diag::warn_cxx98_compat_static_assert, diag::warn_cxx98_compat_switch_into_protected_scope, diag::warn_cxx98_compat_template_arg_extra_parens, diag::warn_cxx98_compat_template_outside_of_template, diag::warn_cxx98_compat_template_parameter_default_in_function_template, diag::warn_cxx98_compat_template_spec_decl_out_of_scope, diag::warn_cxx98_compat_trailing_return_type, diag::warn_cxx98_compat_two_right_angle_brackets, diag::warn_cxx98_compat_typename_outside_of_template, diag::warn_cxx98_compat_unelaborated_friend_type, diag::warn_cxx98_compat_unicode_literal, diag::warn_cxx98_compat_unicode_type, diag::warn_cxx98_compat_using_decl_constructor, diag::warn_cxx98_compat_variadic_templates, -1 };
static const short DiagSubGroup40[] = { 41, 42, 44, -1 };
static const short DiagArray41[] = { diag::warn_cxx98_compat_temp_copy, -1 };
static const short DiagArray42[] = { diag::warn_cxx98_compat_template_arg_local_type, -1 };
static const short DiagArray43[] = { diag::warn_cxx98_compat_array_size_conversion, diag::warn_cxx98_compat_cast_fn_obj, diag::warn_cxx98_compat_empty_fnmacro_arg, diag::warn_cxx98_compat_enumerator_list_comma, diag::warn_cxx98_compat_explicit_instantiation_after_specialization, diag::warn_cxx98_compat_extern_template, diag::warn_cxx98_compat_longlong, diag::warn_cxx98_compat_pp_line_too_big, diag::warn_cxx98_compat_top_level_semi, diag::warn_cxx98_compat_variadic_macro, -1 };
static const short DiagSubGroup43[] = { 40, -1 };
static const short DiagArray44[] = { diag::warn_cxx98_compat_template_arg_unnamed_type, -1 };
static const short DiagArray45[] = { diag::ext_c1x_alignas, diag::ext_c1x_generic_selection, diag::ext_c1x_static_assert, -1 };
static const short DiagArray46[] = { diag::ext_c99_array_usage, diag::ext_c99_compound_literal, diag::ext_c99_variable_decl_in_for_loop, diag::ext_c99_whitespace_required_after_macro_name, -1 };
static const short DiagArray47[] = { diag::warn_cast_align, -1 };
static const short DiagArray49[] = { diag::ext_catch_incomplete_ptr, diag::ext_catch_incomplete_ref, -1 };
static const short DiagArray51[] = { diag::warn_subscript_is_char, -1 };
static const short DiagArray52[] = { diag::escaped_newline_block_comment_end, diag::ext_bcpl_comment, diag::ext_multi_line_bcpl_comment, diag::warn_nested_block_comment, -1 };
static const short DiagSubGroup53[] = { 52, -1 };
static const short DiagArray54[] = { diag::ext_complex_component_init, -1 };
static const short DiagArray55[] = { diag::warn_typecheck_cond_pointer_integer_mismatch, -1 };
static const short DiagArray56[] = { diag::warn_maybe_uninit_var, diag::warn_maybe_uninit_var_captured_by_block, -1 };
static const short DiagArray57[] = { diag::warn_impcast_bitfield_precision_constant, diag::warn_impcast_integer_precision_constant, -1 };
static const short DiagArray58[] = { diag::warn_logical_instead_of_bitwise, -1 };
static const short DiagArray59[] = { diag::warn_impcast_complex_scalar, diag::warn_impcast_different_enum_types, diag::warn_impcast_float_integer, diag::warn_impcast_float_precision, diag::warn_impcast_integer_precision, diag::warn_impcast_null_pointer_to_integer, diag::warn_impcast_vector_scalar, diag::warn_template_arg_negative, diag::warn_template_arg_too_large, -1 };
static const short DiagSubGroup59[] = { 198, 57, 122, 219, 200, 30, -1 };
static const short DiagArray61[] = { diag::warn_default_atomic_custom_getter_setter, -1 };
static const short DiagArray62[] = { diag::warn_bind_ref_member_to_parameter, diag::warn_bind_ref_member_to_temporary, diag::warn_init_ptr_member_to_parameter_addr, -1 };
static const short DiagArray63[] = { diag::ext_mixed_decls_code, -1 };
static const short DiagArray64[] = { diag::warn_default_arg_makes_ctor_special, -1 };
static const short DiagArray65[] = { diag::note_it_delegates_to, diag::note_which_delegates_to, diag::warn_delegating_ctor_cycle, -1 };
static const short DiagArray66[] = { diag::warn_delete_incomplete, -1 };
static const short DiagArray67[] = { diag::warn_delete_abstract_non_virtual_dtor, diag::warn_delete_non_virtual_dtor, -1 };
static const short DiagArray68[] = { diag::warn_access_decl_deprecated, diag::warn_drv_treating_input_as_cxx, diag::warn_increment_bool, diag::warn_vector_long_decl_spec_combination, -1 };
static const short DiagSubGroup68[] = { 69, -1 };
static const short DiagArray69[] = { diag::warn_deprecated, diag::warn_deprecated_fwdclass_message, diag::warn_deprecated_message, -1 };
static const short DiagArray70[] = { diag::warn_deprecated_def, -1 };
static const short DiagArray71[] = { diag::warn_deprecated_string_literal_conversion, -1 };
static const short DiagArray74[] = { diag::warn_conflicting_param_modifiers, diag::warn_conflicting_ret_type_modifiers, -1 };
static const short DiagArray76[] = { diag::ext_dollar_in_identifier, -1 };
static const short DiagArray77[] = { diag::warn_method_param_declaration, -1 };
static const short DiagArray78[] = { diag::warn_dyn_class_memaccess, -1 };
static const short DiagArray80[] = { diag::warn_empty_if_body, -1 };
static const short DiagSubGroup81[] = { 86, -1 };
static const short DiagArray82[] = { diag::warn_comparison_of_mixed_enum_types, -1 };
static const short DiagArray83[] = { diag::warn_exit_time_destructor, -1 };
static const short DiagArray84[] = { diag::ext_offsetof_extended_field_designator, -1 };
static const short DiagSubGroup85[] = { 136, 103, 112, 188, 139, 199, 254, -1 };
static const short DiagArray86[] = { diag::ext_pp_extra_tokens_at_eol, -1 };
static const short DiagArray87[] = { diag::ext_flexible_array_in_array, diag::ext_flexible_array_in_struct, -1 };
static const short DiagArray88[] = { diag::warn_floatingpoint_eq, -1 };
static const short DiagArray89[] = { diag::warn_format_invalid_positional_specifier, diag::warn_format_mix_positional_nonpositional_args, diag::warn_format_nonsensical_length, diag::warn_format_string_is_wide_literal, diag::warn_format_zero_positional_specifier, diag::warn_missing_format_string, diag::warn_printf_asterisk_wrong_type, diag::warn_printf_conversion_argument_type_mismatch, diag::warn_printf_format_string_contains_null_char, diag::warn_printf_ignored_flag, diag::warn_printf_incomplete_specifier, diag::warn_printf_insufficient_data_args, diag::warn_printf_nonsensical_flag, diag::warn_printf_nonsensical_optional_amount, diag::warn_printf_positional_arg_exceeds_data_args, diag::warn_scanf_nonzero_width, diag::warn_scanf_scanlist_incomplete, -1 };
static const short DiagSubGroup89[] = { 90, 95, 151, 93, 94, 91, -1 };
static const short DiagArray90[] = { diag::warn_printf_data_arg_not_used, -1 };
static const short DiagArray91[] = { diag::warn_format_invalid_conversion, -1 };
static const short DiagArray92[] = { diag::warn_format_nonliteral, -1 };
static const short DiagSubGroup92[] = { 93, -1 };
static const short DiagArray93[] = { diag::warn_format_nonliteral_noargs, diag::warn_printf_write_back, -1 };
static const short DiagArray95[] = { diag::warn_empty_format_string, -1 };
static const short DiagSubGroup96[] = { 92, 93, 94, -1 };
static const short DiagArray97[] = { diag::ext_four_char_character_literal, -1 };
static const short DiagArray98[] = { diag::warn_global_constructor, diag::warn_global_destructor, -1 };
static const short DiagArray99[] = { diag::ext_anonymous_struct, diag::ext_anonymous_union, diag::ext_flexible_array_empty_aggregate_gnu, diag::ext_flexible_array_init, diag::ext_flexible_array_union_gnu, diag::ext_forward_ref_enum_def, diag::ext_gnu_address_of_label, diag::ext_gnu_case_range, diag::ext_gnu_conditional_expr, diag::ext_gnu_empty_initializer, diag::ext_gnu_indirect_goto, diag::ext_gnu_local_label, diag::ext_gnu_statement_expr, diag::ext_in_class_initializer_float_type, diag::ext_qualified_function_type_template_arg, diag::ext_typecheck_expression_not_constant_but_accepted, diag::ext_variable_sized_type_in_struct, -1 };
static const short DiagSubGroup99[] = { 100, 262, -1 };
static const short DiagArray100[] = { diag::ext_gnu_array_range, diag::ext_gnu_missing_equal_designator, diag::ext_gnu_old_style_field_designator, -1 };
static const short DiagArray101[] = { diag::warn_using_directive_in_header, -1 };
static const short DiagArray102[] = { diag::warn_condition_is_idiomatic_assignment, -1 };
static const short DiagArray103[] = { diag::warn_qual_return_type, -1 };
static const short DiagSubGroup104[] = { 106, 107, -1 };
static const short DiagArray105[] = { diag::warn_auto_implicit_atomic_property, diag::warn_implicit_atomic_property, -1 };
static const short DiagArray106[] = { diag::ext_implicit_function_decl, diag::warn_implicit_function_decl, -1 };
static const short DiagArray107[] = { diag::ext_missing_type_specifier, -1 };
static const short DiagArray109[] = { diag::ext_nested_pointer_qualifier_mismatch, diag::ext_typecheck_convert_discards_qualifiers, diag::ext_typecheck_convert_incompatible_pointer, -1 };
static const short DiagArray110[] = { diag::warn_incomplete_impl, -1 };
static const short DiagArray112[] = { diag::warn_initializer_overrides, diag::warn_subobject_initializer_overrides, -1 };
static const short DiagArray115[] = { diag::warn_iboutlet_object_type, -1 };
static const short DiagArray116[] = { diag::warn_falloff_noreturn_function, diag::warn_noreturn_function_has_return_expr, -1 };
static const short DiagArray117[] = { diag::warn_offsetof_non_pod_type, -1 };
static const short DiagArray119[] = { diag::err_pp_bad_paste_ms, -1 };
static const short DiagArray120[] = { diag::ext_token_used, -1 };
static const short DiagArray121[] = { diag::warn_parameter_size, diag::warn_return_value_size, -1 };
static const short DiagArray122[] = { diag::warn_impcast_literal_float_to_integer, -1 };
static const short DiagArray123[] = { diag::warn_float_overflow, diag::warn_float_underflow, -1 };
static const short DiagArray124[] = { diag::ext_template_arg_local_type, -1 };
static const short DiagSubGroup124[] = { 42, -1 };
static const short DiagArray125[] = { diag::warn_logical_and_in_logical_or, -1 };
static const short DiagArray126[] = { diag::ext_longlong, -1 };
static const short DiagArray127[] = { diag::warn_main_one_arg, diag::warn_static_main, -1 };
static const short DiagArray128[] = { diag::err_warning_check_malformed, diag::warn_has_warning_invalid_option, -1 };
static const short DiagArray129[] = { diag::warn_non_contravariant_param_types, diag::warn_non_covariant_ret_types, -1 };
static const short DiagArray130[] = { diag::ext_anonymous_record_with_type, diag::ext_charize_microsoft, diag::ext_enumerator_too_large, diag::ext_flexible_array_empty_aggregate_ms, diag::ext_flexible_array_union_ms, diag::ext_function_specialization_in_class, diag::ext_ms_anonymous_struct, diag::ext_ms_enum_fixed_underlying_type, diag::ext_ms_explicit_constructor_call, diag::ext_ms_forward_ref_enum, diag::war_ms_using_declaration_inaccessible, diag::warn_found_via_dependent_bases_lookup, diag::warn_goto_into_protected_scope, diag::warn_override_exception_spec, diag::warn_pure_function_definition, -1 };
static const short DiagArray131[] = { diag::warn_microsoft_dependent_exists, -1 };
static const short DiagArray132[] = { diag::warn_attribute_method_def, -1 };
static const short DiagArray133[] = { diag::warn_struct_class_previous_tag_mismatch, diag::warn_struct_class_tag_mismatch, -1 };
static const short DiagArray134[] = { diag::warn_missing_braces, -1 };
static const short DiagArray135[] = { diag::ext_no_declarators, diag::ext_typedef_without_a_name, -1 };
static const short DiagArray136[] = { diag::warn_missing_field_initializers, -1 };
static const short DiagArray139[] = { diag::warn_missing_method_return_type, -1 };
static const short DiagArray140[] = { diag::warn_suggest_noreturn_block, diag::warn_suggest_noreturn_function, -1 };
static const short DiagArray141[] = { diag::warn_missing_prototype, -1 };
static const short DiagArray142[] = { diag::warn_module_build, -1 };
static const short DiagSubGroup143[] = { 51, 52, 67, 89, 104, 133, 134, 144, 183, 185, 187, 222, 202, 229, 238, 239, 245, 263, 156, 169, -1 };
static const short DiagArray144[] = { diag::ext_multichar_character_literal, -1 };
static const short DiagArray146[] = { diag::ext_no_newline_eof, -1 };
static const short DiagSubGroup147[] = { 199, 59, 123, -1 };
static const short DiagArray148[] = { diag::warn_cannot_pass_non_pod_arg_to_vararg, diag::warn_second_parameter_to_va_arg_not_pod, diag::warn_second_parameter_to_va_arg_ownership_qualified, -1 };
static const short DiagArray149[] = { diag::warn_non_virtual_dtor, -1 };
static const short DiagArray150[] = { diag::warn_synthesized_ivar_access, -1 };
static const short DiagArray151[] = { diag::warn_null_arg, -1 };
static const short DiagArray153[] = { diag::warn_null_in_arithmetic_operation, diag::warn_null_in_comparison_operation, -1 };
static const short DiagArray154[] = { diag::null_in_char, diag::null_in_file, diag::null_in_string, -1 };
static const short DiagArray155[] = { diag::warn_indirection_through_null, -1 };
static const short DiagArray156[] = { diag::warn_objc_missing_super_dealloc, diag::warn_objc_missing_super_finalize, -1 };
static const short DiagArray157[] = { diag::warn_objc_property_retain_of_block, -1 };
static const short DiagArray158[] = { diag::warn_objc_pointer_cxx_catch_fragile, -1 };
static const short DiagArray159[] = { diag::warn_atomic_property_nontrivial_assign_op, -1 };
static const short DiagArray160[] = { diag::warn_setter_getter_impl_required, diag::warn_setter_getter_impl_required_in_category, -1 };
static const short DiagArray161[] = { diag::warn_owning_getter_rule, -1 };
static const short DiagArray162[] = { diag::warn_category_method_impl_match, -1 };
static const short DiagArray163[] = { diag::warn_objc_readonly_property_has_setter, -1 };
static const short DiagArray166[] = { diag::ext_out_of_line_declaration, -1 };
static const short DiagArray168[] = { diag::ext_string_too_long, -1 };
static const short DiagArray169[] = { diag::warn_overloaded_virtual, -1 };
static const short DiagArray170[] = { diag::warn_conflicting_overriding_param_modifiers, diag::warn_conflicting_overriding_param_types, diag::warn_conflicting_overriding_ret_type_modifiers, diag::warn_conflicting_overriding_ret_types, diag::warn_conflicting_overriding_variadic, diag::warn_non_contravariant_overriding_param_types, diag::warn_non_covariant_overriding_ret_types, -1 };
static const short DiagArray171[] = { diag::warn_unnecessary_packed, -1 };
static const short DiagArray172[] = { diag::warn_padded_struct_anon_field, diag::warn_padded_struct_field, diag::warn_padded_struct_size, -1 };
static const short DiagArray173[] = { diag::warn_condition_is_assignment, diag::warn_precedence_bitwise_rel, diag::warn_precedence_conditional, -1 };
static const short DiagSubGroup173[] = { 125, 29, 174, -1 };
static const short DiagArray174[] = { diag::warn_equality_with_extra_parens, -1 };
static const short DiagArray175[] = { diag::ext_gnu_ptr_func_arith, diag::ext_gnu_subscript_void_type, diag::ext_gnu_void_ptr, diag::ext_sizeof_function_type, diag::ext_sizeof_void_type, -1 };
static const short DiagArray176[] = { diag::ext_typecheck_convert_incompatible_pointer_sign, -1 };
static const short DiagArray178[] = { diag::warn_typecheck_cond_incompatible_pointers, -1 };
static const short DiagArray179[] = { diag::ext_predef_outside_function, -1 };
static const short DiagArray180[] = { diag::warn_unimplemented_protocol_method, -1 };
static const short DiagArray181[] = { diag::warn_objc_property_attr_mutually_exclusive, -1 };
static const short DiagArray183[] = { diag::warn_initializer_out_of_order, -1 };
static const short DiagArray184[] = { diag::warn_ret_addr_label, diag::warn_ret_local_temp_addr, diag::warn_ret_local_temp_ref, diag::warn_ret_stack_addr, diag::warn_ret_stack_ref, -1 };
static const short DiagArray185[] = { diag::ext_return_has_expr, diag::ext_return_missing_expr, diag::warn_falloff_nonvoid_function, diag::warn_maybe_falloff_nonvoid_function, diag::warn_return_missing_expr, -1 };
static const short DiagArray186[] = { diag::warn_unimplemented_selector, -1 };
static const short DiagArray187[] = { diag::warn_self_assignment, -1 };
static const short DiagArray188[] = { diag::warn_semicolon_before_method_body, -1 };
static const short DiagArray189[] = { diag::warn_missing_sentinel, diag::warn_not_enough_argument, -1 };
static const short DiagArray191[] = { diag::warn_fe_serialized_diag_failure, -1 };
static const short DiagArray192[] = { diag::warn_decl_shadow, -1 };
static const short DiagArray193[] = { diag::warn_ivar_use_hidden, -1 };
static const short DiagArray194[] = { diag::warn_shift_negative, -1 };
static const short DiagArray195[] = { diag::warn_shift_gt_typewidth, -1 };
static const short DiagArray196[] = { diag::warn_shift_result_gt_typewidth, -1 };
static const short DiagArray197[] = { diag::warn_shift_result_sets_sign_bit, -1 };
static const short DiagArray198[] = { diag::warn_impcast_integer_64_32, -1 };
static const short DiagArray199[] = { diag::warn_mixed_sign_comparison, -1 };
static const short DiagArray200[] = { diag::warn_impcast_integer_sign, diag::warn_impcast_integer_sign_conditional, -1 };
static const short DiagArray202[] = { diag::warn_sizeof_array_param, -1 };
static const short DiagArray203[] = { diag::warn_sizeof_pointer_expr_memaccess, diag::warn_sizeof_pointer_type_memaccess, -1 };
static const short DiagArray217[] = { diag::warn_strict_multiple_method_decl, -1 };
static const short DiagArray218[] = { diag::warn_stringcompare, -1 };
static const short DiagArray219[] = { diag::warn_impcast_string_literal_to_bool, -1 };
static const short DiagArray220[] = { diag::warn_strlcpycat_wrong_size, -1 };
static const short DiagArray221[] = { diag::ext_typecheck_base_super, -1 };
static const short DiagArray222[] = { diag::warn_case_value_overflow, -1 };
static const short DiagSubGroup222[] = { 224, -1 };
static const short DiagArray224[] = { diag::warn_missing_case1, diag::warn_missing_case2, diag::warn_missing_case3, diag::warn_missing_cases, diag::warn_not_in_enum, -1 };
static const short DiagArray226[] = { diag::warn_comparison_always, diag::warn_lunsigned_always_true_comparison, diag::warn_runsigned_always_true_comparison, -1 };
static const short DiagArray227[] = { diag::ext_typecheck_decl_incomplete_type, -1 };
static const short DiagArray228[] = { diag::note_lock_exclusive_and_shared, diag::warn_cannot_resolve_lock, diag::warn_double_lock, diag::warn_expecting_lock_held_on_loop, diag::warn_fun_excludes_mutex, diag::warn_fun_requires_lock, diag::warn_lock_at_end_of_scope, diag::warn_lock_exclusive_and_shared, diag::warn_no_unlock, diag::warn_unlock_but_no_lock, diag::warn_var_deref_requires_any_lock, diag::warn_var_deref_requires_lock, diag::warn_variable_requires_any_lock, diag::warn_variable_requires_lock, -1 };
static const short DiagArray229[] = { diag::trigraph_converted, diag::trigraph_ends_block_comment, diag::trigraph_ignored, diag::trigraph_ignored_block_comment, -1 };
static const short DiagArray231[] = { diag::warn_redefinition_of_typedef, -1 };
static const short DiagArray232[] = { diag::warn_typename_missing, -1 };
static const short DiagArray233[] = { diag::warn_undeclared_selector, -1 };
static const short DiagArray234[] = { diag::warn_pp_undef_identifier, -1 };
static const short DiagArray236[] = { diag::warn_pointer_indirection_from_incompatible_type, diag::warn_undefined_reinterpret_cast, -1 };
static const short DiagArray237[] = { diag::warn_ucn_escape_too_large, diag::warn_ucn_not_valid_in_c89, -1 };
static const short DiagArray238[] = { diag::warn_field_is_uninit, diag::warn_uninit_self_reference_in_init, diag::warn_uninit_var, diag::warn_uninit_var_captured_by_block, -1 };
static const short DiagArray239[] = { diag::ext_on_off_switch_syntax, diag::ext_pragma_syntax_eod, diag::ext_stdc_pragma_ignored, diag::warn_pragma_diagnostic_cannot_pop, diag::warn_pragma_diagnostic_invalid, diag::warn_pragma_diagnostic_invalid_option, diag::warn_pragma_diagnostic_invalid_token, diag::warn_pragma_diagnostic_unknown_warning, diag::warn_pragma_ignored, diag::warn_stdc_fenv_access_not_supported, -1 };
static const short DiagArray240[] = { diag::warn_unknown_negative_warning_option, diag::warn_unknown_negative_warning_option_suggest, diag::warn_unknown_warning_option, diag::warn_unknown_warning_option_suggest, diag::warn_unknown_warning_specifier, -1 };
static const short DiagArray241[] = { diag::ext_template_arg_unnamed_type, -1 };
static const short DiagSubGroup241[] = { 44, -1 };
static const short DiagArray242[] = { diag::warn_unneeded_internal_decl, -1 };
static const short DiagArray243[] = { diag::warn_unneeded_member_function, -1 };
static const short DiagArray244[] = { diag::warn_unreachable, -1 };
static const short DiagSubGroup245[] = { 246, 250, 251, 256, 257, -1 };
static const short DiagArray247[] = { diag::warn_drv_unused_argument, -1 };
static const short DiagArray248[] = { diag::warn_unused_comparison, -1 };
static const short DiagArray249[] = { diag::warn_unused_exception_param, -1 };
static const short DiagArray250[] = { diag::warn_unused_function, -1 };
static const short DiagSubGroup250[] = { 242, -1 };
static const short DiagArray251[] = { diag::warn_unused_label, -1 };
static const short DiagArray252[] = { diag::pp_macro_not_used, -1 };
static const short DiagArray253[] = { diag::warn_unused_member_function, -1 };
static const short DiagSubGroup253[] = { 243, -1 };
static const short DiagArray254[] = { diag::warn_unused_parameter, -1 };
static const short DiagArray255[] = { diag::warn_unused_result, -1 };
static const short DiagArray256[] = { diag::warn_unused_call, diag::warn_unused_expr, diag::warn_unused_property_expr, diag::warn_unused_voidptr, -1 };
static const short DiagSubGroup256[] = { 248, 255, -1 };
static const short DiagArray257[] = { diag::warn_unused_variable, -1 };
static const short DiagArray258[] = { diag::warn_used_but_marked_unused, -1 };
static const short DiagArray259[] = { diag::warn_user_literal_hexfloat, diag::warn_user_literal_reserved, -1 };
static const short DiagArray260[] = { diag::ext_named_variadic_macro, diag::ext_variadic_macro, -1 };
static const short DiagArray261[] = { diag::warn_incompatible_vectors, -1 };
static const short DiagArray262[] = { diag::ext_vla, -1 };
static const short DiagArray264[] = { diag::warn_weak_template_vtable, -1 };
static const short DiagArray265[] = { diag::warn_weak_vtable, -1 };
static const short DiagSubGroup266[] = { 71, -1 };
#endif // GET_DIAG_ARRAYS


#ifdef GET_DIAG_TABLE
  { 0, "",                                           0, DiagSubGroup0 },
  { 16, "#pragma-messages",                           DiagArray1, 0 },
  { 9, "#warnings",                                  DiagArray2, 0 },
  { 16, "CFString-literal",                           DiagArray3, 0 },
  { 18, "NSObject-attribute",                         DiagArray4, 0 },
  { 3, "abi",                                        0, 0 },
  { 7, "address",                                    0, 0 },
  { 20, "address-of-temporary",                       DiagArray7, 0 },
  { 16, "aggregate-return",                           0, 0 },
  { 3, "all",                                        0, DiagSubGroup9 },
  { 25, "ambiguous-member-template",                  DiagArray10, 0 },
  { 28, "analyzer-incompatible-plugin",               DiagArray11, 0 },
  { 3, "arc",                                        DiagArray12, DiagSubGroup12 },
  { 7, "arc-abi",                                    DiagArray13, 0 },
  { 21, "arc-non-pod-memaccess",                      DiagArray14, 0 },
  { 25, "arc-performSelector-leaks",                  DiagArray15, 0 },
  { 17, "arc-retain-cycles",                          DiagArray16, 0 },
  { 26, "arc-unsafe-retained-assign",                 DiagArray17, 0 },
  { 12, "array-bounds",                               DiagArray18, 0 },
  { 31, "array-bounds-pointer-arithmetic",            DiagArray19, 0 },
  { 17, "atomic-properties",                          0, DiagSubGroup20 },
  { 42, "atomic-property-with-user-defined-accessor", DiagArray21, 0 },
  { 10, "attributes",                                 DiagArray22, 0 },
  { 11, "auto-import",                                DiagArray23, 0 },
  { 18, "auto-storage-class",                         DiagArray24, 0 },
  { 12, "availability",                               0, 0 },
  { 24, "backslash-newline-escape",                   DiagArray26, 0 },
  { 17, "bad-function-cast",                          0, 0 },
  { 22, "bind-to-temporary-copy",                     DiagArray28, DiagSubGroup28 },
  { 22, "bitwise-op-parentheses",                     DiagArray29, 0 },
  { 16, "bool-conversions",                           DiagArray30, 0 },
  { 23, "builtin-macro-redefined",                    DiagArray31, 0 },
  { 23, "builtin-requires-header",                    DiagArray32, 0 },
  { 10, "c++-compat",                                 DiagArray33, 0 },
  { 12, "c++0x-compat",                               0, DiagSubGroup34 },
  { 16, "c++0x-extensions",                           0, DiagSubGroup35 },
  { 15, "c++0x-narrowing",                            0, DiagSubGroup36 },
  { 12, "c++11-compat",                               DiagArray37, DiagSubGroup37 },
  { 16, "c++11-extensions",                           DiagArray38, 0 },
  { 15, "c++11-narrowing",                            DiagArray39, 0 },
  { 12, "c++98-compat",                               DiagArray40, DiagSubGroup40 },
  { 35, "c++98-compat-bind-to-temporary-copy",        DiagArray41, 0 },
  { 37, "c++98-compat-local-type-template-args",      DiagArray42, 0 },
  { 21, "c++98-compat-pedantic",                      DiagArray43, DiagSubGroup43 },
  { 39, "c++98-compat-unnamed-type-template-args",    DiagArray44, 0 },
  { 14, "c1x-extensions",                             DiagArray45, 0 },
  { 14, "c99-extensions",                             DiagArray46, 0 },
  { 10, "cast-align",                                 DiagArray47, 0 },
  { 9, "cast-qual",                                  0, 0 },
  { 32, "catch-incomplete-type-extensions",           DiagArray49, 0 },
  { 10, "char-align",                                 0, 0 },
  { 15, "char-subscripts",                            DiagArray51, 0 },
  { 7, "comment",                                    DiagArray52, 0 },
  { 8, "comments",                                   0, DiagSubGroup53 },
  { 22, "complex-component-init",                     DiagArray54, 0 },
  { 25, "conditional-type-mismatch",                  DiagArray55, 0 },
  { 25, "conditional-uninitialized",                  DiagArray56, 0 },
  { 19, "constant-conversion",                        DiagArray57, 0 },
  { 24, "constant-logical-operand",                   DiagArray58, 0 },
  { 10, "conversion",                                 DiagArray59, DiagSubGroup59 },
  { 17, "ctor-dtor-privacy",                          0, 0 },
  { 24, "custom-atomic-properties",                   DiagArray61, 0 },
  { 14, "dangling-field",                             DiagArray62, 0 },
  { 27, "declaration-after-statement",                DiagArray63, 0 },
  { 26, "default-arg-special-member",                 DiagArray64, 0 },
  { 22, "delegating-ctor-cycles",                     DiagArray65, 0 },
  { 17, "delete-incomplete",                          DiagArray66, 0 },
  { 23, "delete-non-virtual-dtor",                    DiagArray67, 0 },
  { 10, "deprecated",                                 DiagArray68, DiagSubGroup68 },
  { 23, "deprecated-declarations",                    DiagArray69, 0 },
  { 26, "deprecated-implementations",                 DiagArray70, 0 },
  { 27, "deprecated-writable-strings",                DiagArray71, 0 },
  { 21, "disabled-optimization",                      0, 0 },
  { 12, "discard-qual",                               0, 0 },
  { 28, "distributed-object-modifiers",               DiagArray74, 0 },
  { 11, "div-by-zero",                                0, 0 },
  { 30, "dollar-in-identifier-extension",             DiagArray76, 0 },
  { 20, "duplicate-method-arg",                       DiagArray77, 0 },
  { 23, "dynamic-class-memaccess",                    DiagArray78, 0 },
  { 6, "effc++",                                     0, 0 },
  { 10, "empty-body",                                 DiagArray80, 0 },
  { 12, "endif-labels",                               0, DiagSubGroup81 },
  { 12, "enum-compare",                               DiagArray82, 0 },
  { 21, "exit-time-destructors",                      DiagArray83, 0 },
  { 17, "extended-offsetof",                          DiagArray84, 0 },
  { 5, "extra",                                      0, DiagSubGroup85 },
  { 12, "extra-tokens",                               DiagArray86, 0 },
  { 25, "flexible-array-extensions",                  DiagArray87, 0 },
  { 11, "float-equal",                                DiagArray88, 0 },
  { 6, "format",                                     DiagArray89, DiagSubGroup89 },
  { 17, "format-extra-args",                          DiagArray90, 0 },
  { 24, "format-invalid-specifier",                   DiagArray91, 0 },
  { 17, "format-nonliteral",                          DiagArray92, DiagSubGroup92 },
  { 15, "format-security",                            DiagArray93, 0 },
  { 10, "format-y2k",                                 0, 0 },
  { 18, "format-zero-length",                         DiagArray95, 0 },
  { 8, "format=2",                                   0, DiagSubGroup96 },
  { 19, "four-char-constants",                        DiagArray97, 0 },
  { 19, "global-constructors",                        DiagArray98, 0 },
  { 3, "gnu",                                        DiagArray99, DiagSubGroup99 },
  { 14, "gnu-designator",                             DiagArray100, 0 },
  { 14, "header-hygiene",                             DiagArray101, 0 },
  { 21, "idiomatic-parentheses",                      DiagArray102, 0 },
  { 18, "ignored-qualifiers",                         DiagArray103, 0 },
  { 8, "implicit",                                   0, DiagSubGroup104 },
  { 26, "implicit-atomic-properties",                 DiagArray105, 0 },
  { 29, "implicit-function-declaration",              DiagArray106, 0 },
  { 12, "implicit-int",                               DiagArray107, 0 },
  { 6, "import",                                     0, 0 },
  { 26, "incompatible-pointer-types",                 DiagArray109, 0 },
  { 25, "incomplete-implementation",                  DiagArray110, 0 },
  { 9, "init-self",                                  0, 0 },
  { 21, "initializer-overrides",                      DiagArray112, 0 },
  { 6, "inline",                                     0, 0 },
  { 19, "int-to-pointer-cast",                        0, 0 },
  { 16, "invalid-iboutlet",                           DiagArray115, 0 },
  { 16, "invalid-noreturn",                           DiagArray116, 0 },
  { 16, "invalid-offsetof",                           DiagArray117, 0 },
  { 11, "invalid-pch",                                0, 0 },
  { 19, "invalid-token-paste",                        DiagArray119, 0 },
  { 24, "language-extension-token",                   DiagArray120, 0 },
  { 19, "large-by-value-copy",                        DiagArray121, 0 },
  { 18, "literal-conversion",                         DiagArray122, 0 },
  { 13, "literal-range",                              DiagArray123, 0 },
  { 24, "local-type-template-args",                   DiagArray124, DiagSubGroup124 },
  { 22, "logical-op-parentheses",                     DiagArray125, 0 },
  { 9, "long-long",                                  DiagArray126, 0 },
  { 4, "main",                                       DiagArray127, 0 },
  { 23, "malformed-warning-check",                    DiagArray128, 0 },
  { 17, "method-signatures",                          DiagArray129, 0 },
  { 9, "microsoft",                                  DiagArray130, 0 },
  { 16, "microsoft-exists",                           DiagArray131, 0 },
  { 28, "mismatched-method-attributes",               DiagArray132, 0 },
  { 15, "mismatched-tags",                            DiagArray133, 0 },
  { 14, "missing-braces",                             DiagArray134, 0 },
  { 20, "missing-declarations",                       DiagArray135, 0 },
  { 26, "missing-field-initializers",                 DiagArray136, 0 },
  { 24, "missing-format-attribute",                   0, 0 },
  { 20, "missing-include-dirs",                       0, 0 },
  { 26, "missing-method-return-type",                 DiagArray139, 0 },
  { 16, "missing-noreturn",                           DiagArray140, 0 },
  { 18, "missing-prototypes",                         DiagArray141, 0 },
  { 12, "module-build",                               DiagArray142, 0 },
  { 4, "most",                                       0, DiagSubGroup143 },
  { 9, "multichar",                                  DiagArray144, 0 },
  { 14, "nested-externs",                             0, 0 },
  { 11, "newline-eof",                                DiagArray146, 0 },
  { 7, "non-gcc",                                    0, DiagSubGroup147 },
  { 15, "non-pod-varargs",                            DiagArray148, 0 },
  { 16, "non-virtual-dtor",                           DiagArray149, 0 },
  { 15, "nonfragile-abi2",                            DiagArray150, 0 },
  { 7, "nonnull",                                    DiagArray151, 0 },
  { 21, "nonportable-cfstrings",                      0, 0 },
  { 15, "null-arithmetic",                            DiagArray153, 0 },
  { 14, "null-character",                             DiagArray154, 0 },
  { 16, "null-dereference",                           DiagArray155, 0 },
  { 24, "objc-missing-super-calls",                   DiagArray156, 0 },
  { 34, "objc-noncopy-retain-block-property",         DiagArray157, 0 },
  { 26, "objc-nonunified-exceptions",                 DiagArray158, 0 },
  { 37, "objc-property-atomic-setter-synthesis",      DiagArray159, 0 },
  { 28, "objc-property-implementation",               DiagArray160, 0 },
  { 42, "objc-property-matches-cocoa-ownership-rule", DiagArray161, 0 },
  { 35, "objc-protocol-method-implementation",        DiagArray162, 0 },
  { 34, "objc-readonly-with-setter-property",         DiagArray163, 0 },
  { 14, "old-style-cast",                             0, 0 },
  { 20, "old-style-definition",                       0, 0 },
  { 23, "out-of-line-declaration",                    DiagArray166, 0 },
  { 8, "overflow",                                   0, 0 },
  { 18, "overlength-strings",                         DiagArray168, 0 },
  { 18, "overloaded-virtual",                         DiagArray169, 0 },
  { 26, "overriding-method-mismatch",                 DiagArray170, 0 },
  { 6, "packed",                                     DiagArray171, 0 },
  { 6, "padded",                                     DiagArray172, 0 },
  { 11, "parentheses",                                DiagArray173, DiagSubGroup173 },
  { 20, "parentheses-equality",                       DiagArray174, 0 },
  { 13, "pointer-arith",                              DiagArray175, 0 },
  { 12, "pointer-sign",                               DiagArray176, 0 },
  { 19, "pointer-to-int-cast",                        0, 0 },
  { 21, "pointer-type-mismatch",                      DiagArray178, 0 },
  { 38, "predefined-identifier-outside-function",     DiagArray179, 0 },
  { 8, "protocol",                                   DiagArray180, 0 },
  { 21, "readonly-setter-attrs",                      DiagArray181, 0 },
  { 15, "redundant-decls",                            0, 0 },
  { 7, "reorder",                                    DiagArray183, 0 },
  { 20, "return-stack-address",                       DiagArray184, 0 },
  { 11, "return-type",                                DiagArray185, 0 },
  { 8, "selector",                                   DiagArray186, 0 },
  { 11, "self-assign",                                DiagArray187, 0 },
  { 28, "semicolon-before-method-body",               DiagArray188, 0 },
  { 8, "sentinel",                                   DiagArray189, 0 },
  { 14, "sequence-point",                             0, 0 },
  { 22, "serialized-diagnostics",                     DiagArray191, 0 },
  { 6, "shadow",                                     DiagArray192, 0 },
  { 11, "shadow-ivar",                                DiagArray193, 0 },
  { 20, "shift-count-negative",                       DiagArray194, 0 },
  { 20, "shift-count-overflow",                       DiagArray195, 0 },
  { 14, "shift-overflow",                             DiagArray196, 0 },
  { 19, "shift-sign-overflow",                        DiagArray197, 0 },
  { 16, "shorten-64-to-32",                           DiagArray198, 0 },
  { 12, "sign-compare",                               DiagArray199, 0 },
  { 15, "sign-conversion",                            DiagArray200, 0 },
  { 10, "sign-promo",                                 0, 0 },
  { 21, "sizeof-array-argument",                      DiagArray202, 0 },
  { 24, "sizeof-pointer-memaccess",                   DiagArray203, 0 },
  { 15, "stack-protector",                            0, 0 },
  { 15, "strict-aliasing",                            0, 0 },
  { 17, "strict-aliasing=0",                          0, 0 },
  { 17, "strict-aliasing=1",                          0, 0 },
  { 17, "strict-aliasing=2",                          0, 0 },
  { 15, "strict-overflow",                            0, 0 },
  { 17, "strict-overflow=0",                          0, 0 },
  { 17, "strict-overflow=1",                          0, 0 },
  { 17, "strict-overflow=2",                          0, 0 },
  { 17, "strict-overflow=3",                          0, 0 },
  { 17, "strict-overflow=4",                          0, 0 },
  { 17, "strict-overflow=5",                          0, 0 },
  { 17, "strict-prototypes",                          0, 0 },
  { 21, "strict-selector-match",                      DiagArray217, 0 },
  { 14, "string-compare",                             DiagArray218, 0 },
  { 17, "string-conversion",                          DiagArray219, 0 },
  { 20, "strlcpy-strlcat-size",                       DiagArray220, 0 },
  { 27, "super-class-method-mismatch",                DiagArray221, 0 },
  { 6, "switch",                                     DiagArray222, DiagSubGroup222 },
  { 14, "switch-default",                             0, 0 },
  { 11, "switch-enum",                                DiagArray224, 0 },
  { 5, "synth",                                      0, 0 },
  { 20, "tautological-compare",                       DiagArray226, 0 },
  { 36, "tentative-definition-incomplete-type",       DiagArray227, 0 },
  { 13, "thread-safety",                              DiagArray228, 0 },
  { 9, "trigraphs",                                  DiagArray229, 0 },
  { 11, "type-limits",                                0, 0 },
  { 20, "typedef-redefinition",                       DiagArray231, 0 },
  { 16, "typename-missing",                           DiagArray232, 0 },
  { 19, "undeclared-selector",                        DiagArray233, 0 },
  { 5, "undef",                                      DiagArray234, 0 },
  { 18, "undefined-internal",                         0, 0 },
  { 26, "undefined-reinterpret-cast",                 DiagArray236, 0 },
  { 7, "unicode",                                    DiagArray237, 0 },
  { 13, "uninitialized",                              DiagArray238, 0 },
  { 15, "unknown-pragmas",                            DiagArray239, 0 },
  { 22, "unknown-warning-option",                     DiagArray240, 0 },
  { 26, "unnamed-type-template-args",                 DiagArray241, DiagSubGroup241 },
  { 29, "unneeded-internal-declaration",              DiagArray242, 0 },
  { 24, "unneeded-member-function",                   DiagArray243, 0 },
  { 16, "unreachable-code",                           DiagArray244, 0 },
  { 6, "unused",                                     0, DiagSubGroup245 },
  { 15, "unused-argument",                            0, 0 },
  { 28, "unused-command-line-argument",               DiagArray247, 0 },
  { 17, "unused-comparison",                          DiagArray248, 0 },
  { 26, "unused-exception-parameter",                 DiagArray249, 0 },
  { 15, "unused-function",                            DiagArray250, DiagSubGroup250 },
  { 12, "unused-label",                               DiagArray251, 0 },
  { 13, "unused-macros",                              DiagArray252, 0 },
  { 22, "unused-member-function",                     DiagArray253, DiagSubGroup253 },
  { 16, "unused-parameter",                           DiagArray254, 0 },
  { 13, "unused-result",                              DiagArray255, 0 },
  { 12, "unused-value",                               DiagArray256, DiagSubGroup256 },
  { 15, "unused-variable",                            DiagArray257, 0 },
  { 22, "used-but-marked-unused",                     DiagArray258, 0 },
  { 21, "user-defined-literals",                      DiagArray259, 0 },
  { 15, "variadic-macros",                            DiagArray260, 0 },
  { 18, "vector-conversions",                         DiagArray261, 0 },
  { 3, "vla",                                        DiagArray262, 0 },
  { 21, "volatile-register-var",                      0, 0 },
  { 21, "weak-template-vtables",                      DiagArray264, 0 },
  { 12, "weak-vtables",                               DiagArray265, 0 },
  { 13, "write-strings",                              0, DiagSubGroup266 },
#endif // GET_DIAG_TABLE


#ifdef GET_CATEGORY_TABLE
CATEGORY("", DiagCat_None)
CATEGORY("Lexical or Preprocessor Issue", DiagCat_Lexical_or_Preprocessor_Issue)
CATEGORY("Semantic Issue", DiagCat_Semantic_Issue)
CATEGORY("Parse Issue", DiagCat_Parse_Issue)
CATEGORY("ARC Issue", DiagCat_ARC_Issue)
CATEGORY("ARC and @properties", DiagCat_ARC_and__properties)
CATEGORY("ARC Casting Rules", DiagCat_ARC_Casting_Rules)
CATEGORY("Automatic Reference Counting Issue", DiagCat_Automatic_Reference_Counting_Issue)
CATEGORY("ARC Weak References", DiagCat_ARC_Weak_References)
CATEGORY("ARC Restrictions", DiagCat_ARC_Restrictions)
CATEGORY("Inline Assembly Issue", DiagCat_Inline_Assembly_Issue)
CATEGORY("Modules Issue", DiagCat_Modules_Issue)
CATEGORY("ARC Retain Cycle", DiagCat_ARC_Retain_Cycle)
CATEGORY("Related Result Type Issue", DiagCat_Related_Result_Type_Issue)
CATEGORY("#warning Directive", DiagCat__warning_Directive)
CATEGORY("Deprecations", DiagCat_Deprecations)
CATEGORY("Format String Issue", DiagCat_Format_String_Issue)
CATEGORY("Value Conversion Issue", DiagCat_Value_Conversion_Issue)
CATEGORY("#pragma message Directive", DiagCat__pragma_message_Directive)
CATEGORY("Unused Entity Issue", DiagCat_Unused_Entity_Issue)
#endif // GET_CATEGORY_TABLE

